{"version":3,"sources":["Components/feedbackOptions/FeedbackOptions.js","Components/notification/Notification.js","Components/statistic/Statistic.js","Components/section/Section.js","Components/App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","Object","keys","map","item","className","type","name","onClick","Notification","message","Statistic","props","good","neutral","bad","total","positivePercentage","Section","title","useState","setGood","setBad","setNeutral","countTotalFeedback","feedback","sum","Number","toFixed","countPositiveFeedbackPercentage","e","target","App","ReactDOM","render","document","getElementById"],"mappings":"mQAiBeA,EAdS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OAC9B,wBAEEC,UAAU,MACVC,KAAK,SACLC,KAAMH,EACNI,QAASR,EALX,SAOGI,GANIA,OCAIK,G,MAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGL,UAAU,QAAb,SAAsBK,MCsBhBC,EAtBG,SAACC,GACjB,IAAQC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBACnC,OACE,qCACE,oBAAIZ,UAAU,iBAAd,wBACA,+BACE,uCAAUQ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,cCRO,SAASC,EAAT,GAA6B,IAAVC,EAAS,EAATA,MAChC,EAAwBC,mBAAS,GAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KACA,EAAsBD,mBAAS,GAA/B,mBAAOL,EAAP,KAAYO,EAAZ,KACA,EAA8BF,mBAAS,GAAvC,mBAAON,EAAP,KAAgBS,EAAhB,KAiBMC,EAAqB,WAEzB,OADcX,EAAOC,EAAUC,GAS3BU,EALkC,WACtC,IAAMC,EAAMF,IAEZ,OAAOG,OADkBD,EAAOb,EAAOa,EAAO,IAAM,GACpBE,QAAQ,GAEzBC,GACjB,OACE,gCACE,oBAAIxB,UAAU,eAAd,SAA8Bc,IAE9B,cAAC,EAAD,CACEnB,gBA/Bc,SAAC8B,GACnB,OAAQA,EAAEC,OAAOxB,MACf,IAAK,OACHc,EAAQR,EAAO,GACf,MACF,IAAK,MACHS,EAAOP,EAAM,GACb,MACF,IAAK,UACHQ,EAAWT,EAAU,GACrB,MACF,QACE,SAoBAf,QAAS,CAAEc,OAAMC,UAASC,SAG5B,uBACCS,IACC,cAAC,EAAD,CACEX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOQ,IACPP,mBAAoBQ,IAGtB,cAAC,EAAD,CAAcf,QAAQ,yBCpD9B,IAQesB,EARH,WACV,OACE,mCACE,cAACd,EAAD,CAASC,MAAM,6B,MCDrBc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a64f7044.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./FeedbackOptions.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return Object.keys(options).map((item) => (\r\n    <button\r\n      key={item}\r\n      className=\"btn\"\r\n      type=\"button\"\r\n      name={item}\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      {item}\r\n    </button>\r\n  ));\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport \"./Notification.css\";\r\nconst Notification = ({ message }) => {\r\n  return <p className=\"title\">{message}</p>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistic = (props) => {\r\n  const { good, neutral, bad, total, positivePercentage } = props;\r\n  return (\r\n    <>\r\n      <h2 className=\"titleStatistic\">Statistics</h2>\r\n      <ul>\r\n        <li>Good:{good}</li>\r\n        <li>Neutral:{neutral}</li>\r\n        <li>Bad:{bad}</li>\r\n        <li>Total:{total}</li>\r\n        <li>Positive feedback:{positivePercentage}%</li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nStatistic.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistic;\r\n","import React, { useState } from \"react\";\r\nimport FeedbackOptions from \"../feedbackOptions/FeedbackOptions.js\";\r\nimport Notification from \"../notification/Notification.js\";\r\nimport Statistics from \"../statistic/Statistic.js\";\r\n\r\nexport default function Section({ title }) {\r\n  const [good, setGood] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n\r\n  const changeState = (e) => {\r\n    switch (e.target.name) {\r\n      case \"good\":\r\n        setGood(good + 1);\r\n        break;\r\n      case \"bad\":\r\n        setBad(bad + 1);\r\n        break;\r\n      case \"neutral\":\r\n        setNeutral(neutral + 1);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const countTotalFeedback = () => {\r\n    const total = good + neutral + bad;\r\n    return total;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const sum = countTotalFeedback();\r\n    const positiveFeedback = sum ? (good / sum) * 100 : 0;\r\n    return Number(positiveFeedback).toFixed(0);\r\n  };\r\n  const feedback = countPositiveFeedbackPercentage();\r\n  return (\r\n    <div>\r\n      <h1 className=\"titleFitback\">{title}</h1>\r\n\r\n      <FeedbackOptions\r\n        onLeaveFeedback={changeState}\r\n        options={{ good, neutral, bad }}\r\n      />\r\n\r\n      <hr />\r\n      {countTotalFeedback() ? (\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={countTotalFeedback()}\r\n          positivePercentage={feedback}\r\n        />\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Section from \"./section/Section\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Section title=\"Please leave feedback\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}